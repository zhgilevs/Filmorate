CREATE TABLE IF NOT EXISTS USERS
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100)        NOT NULL,
    login    VARCHAR(100) UNIQUE NOT NULL,
    email    VARCHAR(200) UNIQUE NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS MPAS
(
    mpa_id      INTEGER PRIMARY KEY,
    name        VARCHAR(100) UNIQUE NOT NULL,
    description VARCHAR(200)        NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  VARCHAR(200),
    duration     INTEGER,
    release_date DATE         NOT NULL,
    mpa_id       INTEGER      NOT NULL,
    FOREIGN KEY (mpa_id) REFERENCES MPAS (mpa_id),
    CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    genre_id INTEGER PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    genre_id INTEGER NOT NULL,
    film_id  INTEGER NOT NULL,
    PRIMARY KEY (film_id, genre_id),
    FOREIGN KEY (film_id) REFERENCES FILMS (id)  ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES GENRES (genre_id)  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES
(
    user_id INTEGER NOT NULL,
    film_id INTEGER NOT NULL,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES FILMS (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    user_id   INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES USERS (id) ON DELETE CASCADE
);